package com.github.situx.compiler.visitorj;
import com.github.situx.compiler.treej.Add;
import com.github.situx.compiler.treej.AndOr;
import com.github.situx.compiler.treej.Assignment;
import com.github.situx.compiler.treej.Atom;
import com.github.situx.compiler.treej.Casebody;
import com.github.situx.compiler.treej.ClassDef;
import com.github.situx.compiler.treej.Comment;
import com.github.situx.compiler.treej.Div;
import com.github.situx.compiler.treej.EnumDef;
import com.github.situx.compiler.treej.Equals;
import com.github.situx.compiler.treej.Except;
import com.github.situx.compiler.treej.FieldDef;
import com.github.situx.compiler.treej.FunCall;
import com.github.situx.compiler.treej.FunctionDef;
import com.github.situx.compiler.treej.Greater;
import com.github.situx.compiler.treej.IfDef;
import com.github.situx.compiler.treej.Import;
import com.github.situx.compiler.treej.Imps;
import com.github.situx.compiler.treej.Literal;
import com.github.situx.compiler.treej.Loop;
import com.github.situx.compiler.treej.Minus;
import com.github.situx.compiler.treej.Modifier;
import com.github.situx.compiler.treej.Modulo;
import com.github.situx.compiler.treej.Mult;
import com.github.situx.compiler.treej.NotDef;
import com.github.situx.compiler.treej.Number;
import com.github.situx.compiler.treej.Params;
import com.github.situx.compiler.treej.Program;
import com.github.situx.compiler.treej.ReturnType;
import com.github.situx.compiler.treej.Sem;
import com.github.situx.compiler.treej.Shift;
import com.github.situx.compiler.treej.SingleCase;
import com.github.situx.compiler.treej.StringOrCharConst;
import com.github.situx.compiler.treej.Switch;
import com.github.situx.compiler.treej.TryCatch;
import com.github.situx.compiler.treej.Variable;


public interface Visitor {
	void visit(FunctionDef functionDef);
	void visit(Add n);
	void visit(Minus n);
	void visit(Mult n);
	void visit(Div n);
	void visit(Variable variable);
	void visit(FunCall funCall);
	void visit(Literal literal);
	void visit(Program program);
	void visit(Greater greater);
	void visit(Equals equals);
	void visit(AndOr and);
	void visit(SingleCase singleCase);
	void visit(Sem sem);
	void visit(Modulo modulo);
	void visit(Shift shift);
	void visit(Loop loop);
	void visit(Modifier modifier);
	void visit(ClassDef classdef);
	void visit(IfDef ifDef);
	void visit(ReturnType returnType);
	void visit(Params params);
	void visit(Comment comment);
	void visit(FieldDef fieldDef);
	void visit(Import import1);
	void visit(Switch switch1);
	void visit(Casebody casebody);
	void visit(TryCatch tryCatch);
	void visit(EnumDef enumDef);
	void visit(Number number);
	void visit(StringOrCharConst stringOrCharConst);
	void visit(Except except);
	void visit(Assignment assignment);
	void visit(Atom atom);
	void visit(NotDef notDef);
	void visit(Imps imps);
}
